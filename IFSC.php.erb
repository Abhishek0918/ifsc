<?php

namespace Razorpay\IFSC;

class IFSC
{
    <% banks_hash.each_pair do |bank_code, data| %>
    <%= "const #{bank_code} = #{data.to_json};" %><% end %>
    
    public static function validate($code)
    {
        if (strlen($code) !== 11) {
            return false;
        }

        if ($code[4] !== '0') {
            return false;
        }

        $bankCode   = strtoupper(substr($code, 0, 4));
        $branchCode = strtoupper(substr($code, 5));

        if (!defined(static::class . "::$bankCode")) {
            return false;
        }

        $list = constant(static::class."::$bankCode");

        if (ctype_digit($branchCode)) {
            return static::lookupNumeric($list, $branchCode);
        } else {
            return static::lookupString($list, $branchCode);
        }
    }

    protected static function lookupNumeric(array $list, $branchCode)
    {
        $branchCode = intval($branchCode);

        if (in_array($branchCode, $list)) {
            return true;
        }

        return static::lookupRanges($list, $branchCode);
    }

    protected static function lookupRanges(array $list, $branchCode)
    {
        foreach ($list as $item) {
            if (!is_array($item)) {
                continue;
            }

            assert(count($item) === 2);

            if ($branchCode  >= $item[0] and $branchCode <= $item[1]) {
                return true;
            }
        }

        return false;
    }

    protected static function lookupString(array $list, $branchCode)
    {
        return in_array($branchCode, $list);
    }
}